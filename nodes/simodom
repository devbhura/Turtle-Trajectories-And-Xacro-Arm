#!/usr/bin/env python

"""
Helps simulate the turtlebot3 in turtlesim and rviz
Publishers: 
    Odometry (nav_msgs/Odometry): publish pose and twist between odom and base_footprint

Subscriber:
    turtle1/pose : subscribes to the pose of the turtle1 in turtlesim

Broadcaster:
    Transform between the odom and base_footprint

"""

from nav_msgs.msg import Odometry
import rospy 
import geometry_msgs.msg 
from geometry_msgs.msg import Twist, Vector3, TransformStamped, Point, Quaternion 
import tf2_ros
import tf

from turtlesim.msg import Pose



def callback_pose(pose):
    """ Callback function for subscriber which broadcasts transform between odom and base_footprint
        and publishes the velocity and pose to Odometry
        Args: None
        Return: None
    """
    
    x = pose.x
    y = pose.y
    theta = pose.theta
    lin_v = pose.linear_velocity
    ang_w = pose.angular_velocity


    broadcaster = tf2_ros.TransformBroadcaster()
    tr = TransformStamped()
    tr.header.stamp = rospy.Time.now()
    tr.header.frame_id = "odom"
    tr.child_frame_id = "base_footprint"

    # 
    
    tr.transform.translation.x = x - 5.5
    tr.transform.translation.y = y - 5.5
    tr.transform.translation.z = 0
    
    q = tf.transformations.quaternion_from_euler(0, 0,theta)
    tr.transform.rotation.x = q[0]
    tr.transform.rotation.y = q[1]
    tr.transform.rotation.z = q[2]
    tr.transform.rotation.w = q[3]
    broadcaster.sendTransform(tr) 

    odom = Odometry()
    odom.header.stamp = rospy.Time.now()
    odom.header.frame_id = "odom"
    odom.child_frame_id = "base_footprint"  

    odom.pose.pose = geometry_msgs.msg.Pose(Point(x-5.5,y-5.5,0),Quaternion(*q)) 
    odom.twist.twist = Twist(linear = Vector3(lin_v,0,0), angular =  Vector3(0,0,ang_w))
    rate = rospy.Rate(10)

    odom_pub = rospy.Publisher("/nav_msgs/Odometry",Odometry, queue_size = 10 )
    odom_pub.publish(odom)

if __name__=="__main__":
    rospy.init_node("simodom")
    rospy.Subscriber("/turtle1/pose", Pose, callback_pose)
    rospy.spin()

